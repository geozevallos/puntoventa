{"version":3,"sources":["context/authContext.js","modules/pos/pages/components/PosHeader.js","environments/environments.js","services/categoriaService.js","context/posContext.js","modules/pos/pages/terminal/components/PosCategoria.js","modules/pos/pages/terminal/components/PosCategorias.js","services/mesaService.js","modules/pos/pages/terminal/components/PosMesa.js","modules/pos/pages/terminal/components/PosMesas.js","modules/pos/pages/terminal/components/PosPlato.js","modules/pos/pages/terminal/components/PosPlatos.js","modules/pos/pages/components/PosModalInvoice.js","modules/pos/pages/terminal/components/PosBoletaItem.js","modules/pos/pages/terminal/components/PosBoleta.js","modules/pos/pages/terminal/PosTerminalScreen.js","services/pedidoService.js","context/posState.js","modules/pos/PosRouter.js","modules/admin/components/AdminHeader.js","modules/admin/pages/dashboard/AdminDashboardScreen.js","modules/admin/components/AdminModalEditarMesa.js","modules/admin/components/AdminModalCrearMesa.js","modules/admin/pages/mesa/AdminMesaScreen.js","modules/admin/pages/pedido/AdminPedidoScreen.js","services/platoService.js","modules/admin/pages/plato/AdminPlatoCrearScreen.js","modules/admin/pages/plato/AdminPlatoScreen.js","modules/admin/AdminRouter.js","services/authService.js","modules/auth/pages/AuthLoginScreen.js","modules/auth/AuthRouter.js","context/authReducer.js","context/authState.js","PrivateRoute.js","modules/guest/pages/GuestHomeScreen.js","modules/guest/GuestRouter.js","App.js","index.js"],"names":["AuthContext","createContext","PosHeader","useContext","usu_nom","cerrarSesion","class","src","alt","type","placeholder","className","onClick","URL_BACKEND","getCategorias","a","axios","get","rpta","getPlatosByCategoriaId","categoria_id","PosContext","PosCategoria","objCategoria","objCategoriaGlobal","setObjCategoriaGlobal","categoria_nom","PosCategorias","useState","caterogias","SetCategorias","useEffect","then","data","ok","content","map","getMesas","putMesaById","objMesa","put","mesa_id","JSON","stringify","headers","postMesa","post","deleteMesaById","delete","PosMesa","objMesaGlobal","setObjMesaGlobal","mesa_nro","PosMesas","mesas","setMesas","PosPlato","objPlato","modificarPlatoContext","plato_img","plato_nom","plato_pre","toFixed","PosPlatos","platos","setPlatos","Platos","plato_id","PosModalInvoice","mostrar","setMostrar","pedidos","pagarContext","boletaRef","useRef","objPedidoActual","find","objPedido","Modal","show","onHide","size","Header","closeButton","Title","Body","ref","i","plato_cant","Footer","trigger","current","PosBoletaItem","objItem","PosBoleta","items","PosTerminalScreen","postPedido","getPedidos","PosState","props","setPedidos","usu_id","fecha","Date","fechaPedido","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","pedidoplato_cant","objPedidoFinal","pedido_fech","pedido_nro","uuidv4","pedido_est","pedidoplatos","console","log","pedidosRestantes","filter","Provider","value","accion","pedidosActuales","posPlatoEncontrado","findIndex","objPlatoPedido","splice","length","pedido","push","children","PosRouter","path","AdminHeader","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","activeClassName","Form","inline","FormControl","Button","AdminDashboardScreen","categorias","setCategorias","totalMoney","setTotalMoney","socket","socketIOClient","on","dataJSON","parse","totales","total_caja","emit","disconnect","AdminModalEditarMesa","mostrarModalEditar","setMostrarModalEditar","objMesaEditar","traerMesas","formulario","setFormulario","handleChange","e","target","name","onSubmit","preventDefault","htmlFor","onChange","mesa_cap","AdminModalCrearMesa","mostrarModalCrear","setMostrarModalCrear","AdminMesaScreen","cargando","setCargando","columns","label","field","rows","setObjMesaDitar","mounted","setMounted","eliminarMesa","Swal","fire","title","text","showCancelButton","icon","isConfirmed","timer","mesasFormateadas","posicion","acciones","AdminPedidoScreen","datos","setDatos","filas","Mesa","usu_nombre","Usuario","usu_ape","catch","error","getPlatos","postPlato","postUploadImagenByPlatoId","file","miFormData","FormData","append","AdminPlatoCrearScreen","imagenRef","files","rpta2","accept","platosInicial","AdminPlatoScreen","width","Categorium","AdminRouter","exact","postLogin","objLogin","postVerificar","token","withRouter","history","correo","password","iniciarSesionContext","payloadString","split","payloadDecoded","atob","usu_tipo","AuthRouter","authReducer","stateAntiguo","payload","action","localStorage","removeItem","autenticado","initialState","useReducer","state","setState","setItem","payloadStringDecript","payloadJson","getItem","iniciarSesionConLocalStorage","PrivateRoute","startsWith","GuestHomeScreen","style","minHeight","GuestRouter","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e809ce3.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;","import React, { useContext} from \"react\";\r\nimport AuthContext from \"../../../../context/authContext\";\r\n\r\n\r\nconst PosHeader = () => {\r\n\r\n  const { usu_nom, cerrarSesion } = useContext(AuthContext)\r\n\r\n\r\n\r\n  return (\r\n    <header class=\"header\">\r\n      <div class=\"header__logo\">\r\n        <img src=\"/imagenes/logo.svg\" alt=\"\" />\r\n      </div>\r\n      <div class=\"header__buscador\">\r\n        <img src=\"/imagenes/search.svg\" alt=\"\" />\r\n        <input\r\n          type=\"text\"\r\n          class=\"header__input\"\r\n          placeholder=\"Busca un término\"\r\n        />\r\n      </div>\r\n      <div class=\"header__usuario\">\r\n        <img src=\"https://randomuser.me/api/portraits/men/90.jpg\" alt=\"\" />\r\n        <span>{usu_nom}</span>\r\n        <button className=\"btn btn-danger\"\r\n        onClick={\r\n          () => {cerrarSesion();}\r\n        }>Cerrar Sesión</button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default PosHeader;\r\n","export const URL_BACKEND = \"https://codigo4-pos.herokuapp.com\"","import axios from \"axios\"\r\nimport { URL_BACKEND } from \"../environments/environments\"\r\n\r\nexport const getCategorias = async () => {\r\n    const rpta = await axios.get(`${URL_BACKEND}/categoria`);\r\n    return rpta;\r\n}\r\n\r\nexport const getPlatosByCategoriaId = async (categoria_id) => {\r\n    const rpta = await axios.get(`${URL_BACKEND}/categoria/${categoria_id}/platos`);\r\n    return rpta;\r\n}","import { createContext } from \"react\";\r\n\r\n\r\nconst PosContext = createContext();\r\n\r\nexport default PosContext;","import React, { useContext } from \"react\";\r\nimport PosContext from \"../../../../../context/posContext\";\r\n\r\nconst PosCategoria = ({ objCategoria }) => {\r\n  const { objCategoriaGlobal, setObjCategoriaGlobal } = useContext(PosContext);\r\n  return (\r\n    <li\r\n      className={\r\n        objCategoria.categoria_id === objCategoriaGlobal?.categoria_id\r\n          ? \"active\"\r\n          : \"\"\r\n      }\r\n      onClick={() => {\r\n        setObjCategoriaGlobal({ ...objCategoria });\r\n      }}\r\n    >\r\n      <img src=\"/imagenes/plato_blanco.svg\" alt=\"\" />\r\n      <span>{objCategoria.categoria_nom}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PosCategoria;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getCategorias } from \"../../../../../services/categoriaService\";\r\nimport PosCategoria from \"./PosCategoria\";\r\n\r\nconst PosCategorias = () => {\r\n\r\n  const [caterogias, SetCategorias] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getCategorias().then((rpta) => {\r\n      if (rpta.data.ok){\r\n        SetCategorias(rpta.data.content);\r\n      }\r\n    })\r\n  })\r\n\r\n\r\n\r\n\r\n  return (\r\n    <nav class=\"menu\">\r\n      <ul class=\"menu__lista\">\r\n          {caterogias.map((objCategoria) => {\r\n            return <PosCategoria key = {objCategoria.categoria_id}\r\n            objCategoria={objCategoria} />\r\n          })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default PosCategorias;\r\n","import axios from 'axios';\r\nimport { URL_BACKEND } from '../environments/environments';\r\n\r\nexport const getMesas = async () => {\r\n    const rpta = await axios.get(`${URL_BACKEND}/mesa`);\r\n    return rpta;\r\n}\r\n\r\nexport const putMesaById = async (objMesa) => {\r\n    const rpta = await axios.put(`${URL_BACKEND}/mesa/${objMesa.mesa_id}`,\r\n    JSON.stringify(objMesa),\r\n    {\r\n        headers:{\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    })\r\n\r\n    return rpta;\r\n}\r\n\r\n\r\nexport const postMesa = async (objMesa) => {\r\n    const rpta = await axios.post(`${URL_BACKEND}/mesa`,\r\n    JSON.stringify(objMesa),\r\n    {\r\n        headers:{\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    })\r\n\r\n    return rpta;\r\n}\r\n\r\n\r\nexport const deleteMesaById = async (mesa_id) => {\r\n    const rpta = await axios.delete(`${URL_BACKEND}/mesa/${mesa_id}`);\r\n    return rpta;\r\n}","import React, { useContext } from \"react\";\r\nimport PosContext from \"../../../../../context/posContext\";\r\n\r\nconst PosMesa = ({objMesa}) => {\r\n  const {objMesaGlobal, setObjMesaGlobal} = useContext(PosContext)\r\n\r\n\r\n  return (\r\n    // <li className=\"mesas__mesa activo\"></li>\r\n    <li className=\r\n    {`mesas__mesa ${objMesaGlobal?.mesa_id === objMesa.mesa_id ?\r\n     \"activo\" : \"\"}`}\r\n    onClick={() => {\r\n      setObjMesaGlobal({\r\n        ...objMesa\r\n      });\r\n    }}\r\n    >\r\n      <span class=\"mesas__titulo\">Mesa</span>\r\n      <span class=\"mesas__numero\">{objMesa.mesa_nro}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PosMesa;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getMesas } from \"../../../../../services/mesaService\";\r\nimport PosMesa from \"./PosMesa\";\r\n\r\nconst PosMesas = () => {\r\n  const [mesas, setMesas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMesas().then((rpta) => {\r\n      if (rpta.data.ok) {\r\n        setMesas(rpta.data.content);\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div class=\"mesas\">\r\n      <ul class=\"mesas__lista\">\r\n        {mesas.map((objMesa) => {\r\n            return <PosMesa key = {objMesa.mesa_id} objMesa={objMesa}/>\r\n        })}\r\n      </ul>\r\n      <div class=\"mesas__info\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosMesas;\r\n","import React, { useContext } from \"react\";\r\nimport PosContext from \"../../../../../context/posContext\";\r\n\r\nconst PosPlato = ({objPlato}) => {\r\n\r\nconst {modificarPlatoContext} = useContext(PosContext);\r\n\r\n\r\n\r\n  return (\r\n    \r\n      <div className=\"carta__plato\">\r\n        <img\r\n          src={objPlato.plato_img}\r\n          alt=\"\"\r\n        />\r\n        <h4 className=\"carta__titulo\">{objPlato.plato_nom}</h4>\r\n        <span className=\"carta__precio\">{(+objPlato.plato_pre).toFixed(2)}</span>\r\n        <div className=\"carta__botones\">\r\n          <button className=\"boton boton-outline-primary boton-restar\"\r\n          onClick={() => {\r\n            modificarPlatoContext({...objPlato}, \"restar\")\r\n          }}>-1</button>\r\n          <button className=\"boton boton-outline-primary boton-sumar\"\r\n          onClick={() => {\r\n            modificarPlatoContext({...objPlato}, \"sumar\")\r\n          }}>+1</button>\r\n        </div>\r\n      </div>\r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default PosPlato;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PosContext from \"../../../../../context/posContext\";\r\nimport { getPlatosByCategoriaId } from \"../../../../../services/categoriaService\";\r\nimport PosPlato from \"./PosPlato\";\r\n\r\nconst PosPlatos = () => {\r\n  const [platos, setPlatos] = useState([]);\r\n  const { objCategoriaGlobal } = useContext(PosContext);\r\n\r\n  useEffect(() => {\r\n    if (objCategoriaGlobal) {\r\n      getPlatosByCategoriaId(objCategoriaGlobal.categoria_id).then((rpta) => {\r\n        if(rpta.data.ok) {\r\n          setPlatos(rpta.data.content.Platos)\r\n        };\r\n      });\r\n    }\r\n  }, [objCategoriaGlobal]);\r\n\r\n  return (\r\n    <div class=\"carta\">\r\n      <h3>\r\n        Lista de Platos Categoria: &nbsp;{\" \"}\r\n        <span class=\"color-secundario\">\r\n          {objCategoriaGlobal ? objCategoriaGlobal.categoria_nom : \"Seleccione una categoria\"}\r\n          </span>\r\n      </h3>\r\n\r\n      <div class=\"carta__platos\">\r\n        {\r\n          platos.map((objPlato) => {\r\n            return <PosPlato key={objPlato.plato_id}\r\n            objPlato = {\r\n              objPlato\r\n            } />\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosPlatos;\r\n","import React, { useContext, useRef } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport PosContext from \"../../../../context/posContext\";\r\nimport ReactToPrint from \"react-to-print\"\r\n\r\nconst PosModalInvoice = ({ mostrar, setMostrar }) => {\r\n  const { pedidos, objMesaGlobal, pagarContext } = useContext(PosContext);\r\n\r\n  //CReando referencia para imprimir\r\n  const boletaRef = useRef();\r\n\r\n  let objPedidoActual = pedidos.find(\r\n    (objPedido) => objPedido.mesa_id === objMesaGlobal?.mesa_id\r\n  );\r\n\r\n  return( objPedidoActual ? (\r\n    <Modal\r\n      show={mostrar}\r\n      onHide={() => {\r\n        setMostrar(false);\r\n      }}\r\n      size={\"xl\"}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Boleta</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n\r\n        <div class=\"container\" ref={boletaRef}>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"invoice\">\r\n              <div class=\"invoice-company text-inverse f-w-600\">\r\n                Company Name, Inc\r\n              </div>\r\n              <div class=\"invoice-header\">\r\n                <div class=\"invoice-from\">\r\n                  <small>from</small>\r\n                  <address class=\"m-t-5 m-b-5\">\r\n                    <strong class=\"text-inverse\">Twitter, Inc.</strong>\r\n                    <br />\r\n                    Street Address\r\n                    <br />\r\n                    City, Zip Code\r\n                    <br />\r\n                    Phone: (123) 456-7890\r\n                    <br />\r\n                    Fax: (123) 456-7890\r\n                  </address>\r\n                </div>\r\n                <div class=\"invoice-to\">\r\n                  <small>to</small>\r\n                  <address class=\"m-t-5 m-b-5\">\r\n                    <strong class=\"text-inverse\">Company Name</strong>\r\n                    <br />\r\n                    Street Address\r\n                    <br />\r\n                    City, Zip Code\r\n                    <br />\r\n                    Phone: (123) 456-7890\r\n                    <br />\r\n                    Fax: (123) 456-7890\r\n                  </address>\r\n                </div>\r\n                <div class=\"invoice-date\">\r\n                  <small>Invoice / July period</small>\r\n                  <div class=\"date text-inverse m-t-5\">August 3,2012</div>\r\n                  <div class=\"invoice-detail\">\r\n                    #0000123DSS\r\n                    <br />\r\n                    Services Product\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"invoice-content\">\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table table-invoice\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>TASK DESCRIPTION</th>\r\n                        <th className=\"text-center\">Cantidad</th>\r\n                        <th className=\"text-center\">Descripción</th>\r\n                        <th className=\"text-right\">Precio Unitario</th>\r\n                        <th className=\"text-right\">Precio Total</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {objPedidoActual.platos.map((objPlato, i) => {\r\n                        return (\r\n                          <tr key={i}>\r\n                            <td>{i + 1}</td>\r\n                            <td class=\"text-center\">{objPlato.plato_cant}</td>\r\n                            <td class=\"text-center\">{objPlato.plato_nom}</td>\r\n                            <td class=\"text-right\">S/{objPlato.plato_pre}</td>\r\n                            <td class=\"text-right\">\r\n                              S/{+objPlato.plato_pre * +objPlato.plato_cant}\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n                <div class=\"invoice-price\">\r\n                  <div class=\"invoice-price-left\">\r\n                    <div class=\"invoice-price-row\">\r\n                      <div class=\"sub-price\">\r\n                        <small>SUBTOTAL</small>\r\n                        <span class=\"text-inverse\">$4,500.00</span>\r\n                      </div>\r\n                      <div class=\"sub-price\">\r\n                        <i class=\"fa fa-plus text-muted\"></i>\r\n                      </div>\r\n                      <div class=\"sub-price\">\r\n                        <small>PAYPAL FEE (5.4%)</small>\r\n                        <span class=\"text-inverse\">$108.00</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"invoice-price-right\">\r\n                    <small>TOTAL</small> <span class=\"f-w-600\">$4508.00</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"invoice-note\">\r\n                * Make all cheques payable to [Your Company Name]\r\n                <br />\r\n                * Payment is due within 30 days\r\n                <br />* If you have any questions concerning this invoice,\r\n                contact [Name, Phone Number, Email]\r\n              </div>\r\n\r\n              <div class=\"invoice-footer\">\r\n                <p class=\"text-center m-b-5 f-w-600\">\r\n                  THANK YOU FOR YOUR BUSINESS\r\n                </p>\r\n                <p class=\"text-center\">\r\n                  <span class=\"m-r-10\">\r\n                    <i class=\"fa fa-fw fa-lg fa-globe\"></i> matiasgallipoli.com\r\n                  </span>\r\n                  <span class=\"m-r-10\">\r\n                    <i class=\"fa fa-fw fa-lg fa-phone-volume\"></i>{\" \"}\r\n                    T:016-18192302\r\n                  </span>\r\n                  <span class=\"m-r-10\">\r\n                    <i class=\"fa fa-fw fa-lg fa-envelope\"></i> rtiemps@gmail.com\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n      \r\n    </Modal.Body>\r\n    <Modal.Footer>\r\n      <button className=\"btn btn-success btn-lg\" \r\n      onClick={\r\n        () => {pagarContext().then(rpta => {\r\n          if(rpta) {\r\n            setMostrar(false);\r\n          }\r\n        })}\r\n        }>\r\n        PAGAR\r\n      </button>\r\n        <ReactToPrint \r\n        trigger = {() => <button className=\"btn btn-primary btn-lg\">imprimir</button>} \r\n        content={() => boletaRef.current }/>\r\n\r\n    </Modal.Footer>\r\n    </Modal>\r\n  ) : null\r\n  )\r\n};\r\n\r\nexport default PosModalInvoice;\r\n","import React from \"react\";\r\n\r\nconst PosBoletaItem = ({objItem}) => {\r\n  return (\r\n  \r\n      <li class=\"comanda__item\">\r\n        <p class=\"comanda__nombre\">\r\n          <span>\r\n            <strong>{objItem.plato_nom}</strong>\r\n          </span>\r\n          <span>Precio S/ {objItem.plato_pre}</span>\r\n        </p>\r\n        <p class=\"comanda__cantidad\">{objItem.plato_cant}</p>\r\n        <p class=\"comanda__precio\">\r\n          <strong>S/ {objItem.plato_cant * +objItem.plato_pre}</strong>\r\n        </p>\r\n      </li>\r\n     \r\n\r\n  );\r\n};\r\n\r\nexport default PosBoletaItem;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PosContext from \"../../../../../context/posContext\";\r\nimport PosModalInvoice from \"../../components/PosModalInvoice\";\r\nimport PosBoletaItem from \"./PosBoletaItem\";\r\n\r\n\r\nconst PosBoleta = () => {\r\n  const { pedidos, objMesaGlobal } = useContext(PosContext);\r\n  const [mostrar, setMostrar] = useState(false);\r\n\r\n  let items = [];\r\n\r\n  //Si existe una mesa global seleccionada, entonces\r\n  //obtener el valor de arreglo de PLATOS de esa mesa\r\n  if (objMesaGlobal) {\r\n    //Encontrando el objeto q tiene la mesa global seleccionada\r\n    let objPedidoActual = pedidos.find(\r\n      (objPedido) => objPedido.mesa_id === objMesaGlobal.mesa_id\r\n    );\r\n    //Si el objePedidoActual existe (lo cla implica que existe un pedido para la mesa global seleccionada)\r\n    if (objPedidoActual) {\r\n      //tomamos su platos en el arreglo items\r\n      items = objPedidoActual.platos;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div class=\"boleta\">\r\n      <h3>\r\n        Pedido Mesa: &nbsp;\r\n        <span class=\"color-secundario\">\r\n          {objMesaGlobal ? objMesaGlobal.mesa_nro : \"Seleccione\"}\r\n        </span>\r\n      </h3>\r\n      <hr />\r\n      <div class=\"comanda\">\r\n        <h4 class=\"comanda__mesa\">\r\n          {objMesaGlobal ? \"Mesa \" + objMesaGlobal.mesa_nro : \"Seleccione\"}\r\n        </h4>\r\n        <p class=\"comanda__usuario\">Carlos Jimenez</p>\r\n        <hr />\r\n\r\n        <ul class=\"comanda__lista\">\r\n          {items.map((objItem) => {\r\n            return <PosBoletaItem key={objItem.plato_id} objItem={objItem} />;\r\n          })}\r\n        </ul>\r\n        <button className=\"boton boton-success boton-block\"\r\n        onClick={\r\n          () => {\r\n            setMostrar(true)\r\n          }\r\n        }>PAGAR</button>\r\n      </div>\r\n     <PosModalInvoice \r\n     mostrar={mostrar}\r\n     setMostrar={setMostrar}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosBoleta;\r\n","import React from \"react\";\r\nimport PosHeader from \"../../../pos/pages/components/PosHeader\";\r\nimport PosCategorias from \"./components/PosCategorias\";\r\nimport PosMesas from \"./components/PosMesas\";\r\nimport PosPlatos from \"./components/PosPlatos\";\r\nimport PosBoleta from \"./components/PosBoleta\";\r\n\r\nconst PosTerminalScreen = () => {\r\n  return (\r\n    <>\r\n      <PosHeader />\r\n      <main class=\"pos-container\">\r\n        <PosCategorias />\r\n        <section class=\"tabla\">\r\n          <PosMesas />\r\n          <div class=\"pedido\">\r\n            <PosPlatos />\r\n            <PosBoleta />\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PosTerminalScreen;\r\n","import axios from 'axios'\r\nimport {URL_BACKEND} from '../environments/environments'\r\n\r\n\r\nexport const postPedido = async (objPedido) => {\r\n    const rpta = await axios.post(\r\n        `${URL_BACKEND}/pedido`,\r\n        JSON.stringify(objPedido),\r\n        {\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            }\r\n        }\r\n    );\r\n\r\n    return rpta;\r\n}\r\n\r\n\r\nexport const getPedidos = async () => {\r\n    const rpta = await axios.get(`${URL_BACKEND}/pedido`);\r\n    return rpta;\r\n}","import React, { useContext, useState } from \"react\";\r\nimport PosContext from \"./posContext\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { postPedido } from \"../services/pedidoService\";\r\nimport AuthContext from \"./authContext\";\r\n\r\nconst PosState = (props) => {\r\n  const [objMesaGlobal, setObjMesaGlobal] = useState(null);\r\n  const [objCategoriaGlobal, setObjCategoriaGlobal] = useState(null);\r\n  const [pedidos, setPedidos] = useState([]);\r\n\r\n  const {usu_id} = useContext(AuthContext);\r\n\r\n  const modificarPlatoContext = (objPlato, accion) => {\r\n    //Obtener una copia del estado de pedidos\r\n    let pedidosActuales = [...pedidos];\r\n    /**\r\n    1. Verificar si tenemos una mesa global seleccionada para\r\n    agregar el plato. En caso contrario no hacer nada\r\n*/\r\n    if (!objMesaGlobal) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n    2. Preguntamos si el arreglo de pedidos, ya tiene un \r\n    pedido pendiente en la mesa global seleccionada\r\n     */\r\n    let objPedido = pedidosActuales.find((objPedido) => {\r\n      return objMesaGlobal.mesa_id === objPedido.mesa_id;\r\n    });\r\n\r\n    if (objPedido) {\r\n      //Ya había un pedido para la mesa global seleccionada\r\n      //si hemos encontrado un objPedido, no implica que el plato que queremos agregar\r\n      //esté previamente en el arreglo de platos de dicho pedido\r\n      //Recorriendo el arreglo de platos, para ver si encontraos un plato igual al q\r\n      //queremos agregar\r\n\r\n      // let objPlatoPedido = objPedido.platos.find((objPlatoPedido) => objPlatoPedido.plato_id === objPlato.plato_id)\r\n\r\n      let posPlatoEncontrado = objPedido.platos.findIndex(\r\n        (objPlatoPedido) => objPlatoPedido.plato_id === objPlato.plato_id\r\n      );\r\n\r\n      //Existía un plato igual al q queremos agregar?\r\n      //if(objPlatoPedido){\r\n\r\n      if (posPlatoEncontrado >= 0) {\r\n        if (accion === \"sumar\") {\r\n          //Si usamos findindex, significa q el plato existia en una posicion del arreglo de platos\r\n\r\n          //Agregar una unidad del nuevo plato al pedido\r\n          objPedido.platos[posPlatoEncontrado].plato_cant++;\r\n          setPedidos(pedidosActuales);\r\n        } else {\r\n          //En caso de querer restar un plato, hay que verificar que debemos tener\r\n          //más de una unidad de ese plato, caso contrario  borrar el plato del arreglo\r\n          if (objPedido.platos[posPlatoEncontrado].plato_cant > 1) {\r\n            objPedido.platos[posPlatoEncontrado].plato_cant--;\r\n            setPedidos(pedidosActuales);\r\n          } else {\r\n            //en caso habría una unidad del plato encontrado, borrar dicho plato del arreglo\r\n            objPedido.platos.splice(posPlatoEncontrado, 1);\r\n\r\n            //Como se borraron platos, es posible que el plato haya sido el único, y ya\r\n            // este vacío por lo que debemos borrar el objeto\r\n            if (objPedido.platos.length === 0) {\r\n              pedidosActuales = pedidosActuales.filter(\r\n                (pedido) => pedido.mesa_id !== objMesaGlobal.mesa_id\r\n              );\r\n            }\r\n            setPedidos(pedidosActuales);\r\n          }\r\n        }\r\n      } else {\r\n        if (accion === \"sumar\") {\r\n          //Es el primer plato, en un pedido que ya existia en la mesa global seleccionada\r\n          objPedido.platos.push({\r\n            ...objPlato,\r\n            plato_cant: 1,\r\n          });\r\n          //OJO: objPedido representa a uno de los elemenos del arreglo \"pedidosActuales\"\r\n          //Nosostros acabamos de modificar el objPedido, agregandole un nuevo plato a su arreglo\r\n          //de \"platos\"\r\n          //Cuando \"objPedido\" es modificado, este guarda la dirección de memoria del \"objPedido\",\r\n          //al que representa dentro del arreglo \"PedidosActuales\"\r\n          //Conclusión:\r\n          //Al modificar objPedido, internamente se modifica el \"objPedido\" del arreglo\r\n          //\"pedidosActuales\", por eso volvemos a actualizar el arreglo \"pedidosActuales\"\r\n          setPedidos(pedidosActuales);\r\n        } else {\r\n        }\r\n      }\r\n    } else {\r\n      if ((accion = \"sumar\")) {\r\n        //No había ningún pedido para la mesa global seleccionada (es un nuevo pedido)\r\n        pedidosActuales.push({\r\n          usu_id: 0,\r\n          mesa_id: objMesaGlobal.mesa_id,\r\n          pedido_est: \"pendiente\",\r\n          platos: [\r\n            {\r\n              ...objPlato,\r\n              plato_cant: 1,\r\n            },\r\n          ],\r\n        });\r\n        setPedidos(pedidosActuales);\r\n      }\r\n    }\r\n  };\r\n\r\n  const pagarContext = async () => {\r\n    // Modelo\r\n\r\n    // {\r\n    //   \"pedido_fech\": \"string\",\r\n    //   \"pedido_nro\": \"string\",\r\n    //   \"pedido_est\": \"string\",\r\n    //   \"usu_id\": 0,\r\n    //   \"mesa_id\": 0,\r\n    //   \"pedidoplatos\": [\r\n    //     {\r\n    //       \"plato_id\": 0,\r\n    //       \"peditoplato_cant\": 0\r\n    //     }\r\n    //   ]\r\n    // }\r\n\r\n    let fecha = new Date();\r\n    let fechaPedido =\r\n      fecha.getFullYear() +\r\n      \"-\" +\r\n      (fecha.getMonth() + 1) +\r\n      \"-\" +\r\n      fecha.getDate() +\r\n      \" \" +\r\n      fecha.getHours() +\r\n      \":\" +\r\n      fecha.getMinutes() +\r\n      \":\" +\r\n      fecha.getSeconds();\r\n\r\n    //Encontrar el pediddo del cual quiero hacer el pago\r\n    let objPedido = pedidos.find(\r\n      (objPedido) => objMesaGlobal.mesa_id === objPedido.mesa_id);\r\n\r\n    //Armar el arreglo de platos para enviar al backend\r\n\r\n    let platos = objPedido.platos.map((objPlato) => {\r\n      return {\r\n        plato_id: objPlato.plato_id,\r\n        pedidoplato_cant: objPlato.plato_cant,\r\n      };\r\n    });\r\n\r\n    let objPedidoFinal = {\r\n      pedido_fech: fechaPedido,\r\n      //para generar numero aleatorio\r\n      pedido_nro: uuidv4(),\r\n      pedido_est: \"pagado\",\r\n      usu_id: usu_id,\r\n      mesa_id: objMesaGlobal.mesa_id,\r\n      pedidoplatos: platos,\r\n    };\r\n\r\n    console.log(objPedidoFinal);\r\n\r\n    const rpta = await postPedido(objPedidoFinal)\r\n      if(rpta.data.ok){\r\n        //borrar el pedido de la mesa actual\r\n        let pedidosRestantes = pedidos.filter(objPedido => objPedido.mesa_id !== objMesaGlobal.mesa_id);\r\n        setPedidos([...pedidosRestantes])\r\n        setObjMesaGlobal(null)\r\n        return true; \r\n      };\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <PosContext.Provider\r\n      value={{\r\n        pagarContext,\r\n        //Esto es igual  objMesaGlobal: objMesaGlobal,\r\n        //objCategoriaGlobal: objCategoriaGlobal\r\n        objMesaGlobal,\r\n        objCategoriaGlobal,\r\n        setObjCategoriaGlobal,\r\n        setObjMesaGlobal,\r\n\r\n        pedidos,\r\n\r\n        modificarPlatoContext,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </PosContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PosState;\r\n","import React from 'react'\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport PosTerminalScreen from './pages/terminal/PosTerminalScreen';\r\nimport PosState from '../../context/posState'\r\n\r\nconst PosRouter = () => {\r\n    return (\r\n        <PosState>\r\n        <Switch>\r\n          <Route path=\"/pos/terminal\">\r\n            <PosTerminalScreen />\r\n          </Route>\r\n        </Switch>\r\n      </PosState>\r\n    )\r\n}\r\n\r\nexport default PosRouter\r\n","import React from \"react\";\r\nimport {Navbar, Nav, Form, FormControl, Button} from \"react-bootstrap\"\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst AdminHeader = () => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <NavLink to=\"/admin\" className=\"nav-link\" activeClassName={\"active\"}>Dashboard</NavLink>\r\n          <NavLink to=\"/admin/mesa\" className=\"nav-link\" activeClassName={\"active\"}>Mesas</NavLink>\r\n          <NavLink to=\"/admin/plato\" className=\"nav-link\" activeClassName={\"active\"}>Platos</NavLink>\r\n          <NavLink to=\"/admin/plato\" className=\"nav-link\" activeClassName={\"active\"}>Pedidos</NavLink>\r\n\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-success\">Search</Button>\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default AdminHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { URL_BACKEND } from \"../../../../environments/environments\";\r\n\r\nconst AdminDashboardScreen = () => {\r\n  const [mesas, setMesas] = useState(0);\r\n  const [pedidos, setPedidos] = useState(0);\r\n  const [categorias, setCategorias] = useState(0);\r\n  const [totalMoney, setTotalMoney] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const socket = socketIOClient(URL_BACKEND);\r\n    socket.on(\"reporte-dashboard\", (data) => {\r\n      const dataJSON = JSON.parse(data);\r\n      setMesas(dataJSON.totales.mesas);\r\n      setPedidos(dataJSON.totales.pedidos);\r\n      setCategorias(dataJSON.totales.categorias);\r\n      setTotalMoney(dataJSON.total_caja.totalMoney);\r\n    });\r\n    //Con esto dice: via socket manda una señal para q emita el reporte\r\n    //evento al q yo ya estoyu suscrito\r\n\r\n    socket.emit(\"peticion-reporte-dashboard\");\r\n\r\n\r\n    //cleanup useEffect\r\n    //La función se ejecuta cuando un componetne es desmontado\r\n    return () => {\r\n        socket.disconnect();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col\">\r\n          <h1 className=\"display-3 text-center\">Dashboard Administrativo</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">Total de Mesas</div>\r\n            <div className=\"card-body text-center\">\r\n              <span className=\"display-4\">{mesas}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">Total de pedidos</div>\r\n            <div className=\"card-body text-center\">\r\n              <span className=\"display-4\">{pedidos}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">Total de categorías</div>\r\n            <div className=\"card-body text-center\">\r\n              <span className=\"display-4\">{categorias}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">Total de ingresos</div>\r\n            <div className=\"card-body text-center\">\r\n              <p className=\"display-1\">\r\n                S/ <span>{totalMoney.toFixed(2)}</span>{\" \"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { putMesaById } from \"../../../services/mesaService\";\r\n\r\nconst AdminModalEditarMesa = ({\r\n  mostrarModalEditar,\r\n  setMostrarModalEditar,\r\n  objMesaEditar,\r\n  // setObjMesaEditar\r\n  traerMesas\r\n}) => {\r\n  const [formulario, setFormulario] = useState(objMesaEditar);\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    putMesaById(formulario).then(rpta => {\r\n      if(rpta.data.ok){\r\n\r\n        setMostrarModalEditar(false);\r\n        traerMesas();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setFormulario({...objMesaEditar})\r\n  }, [objMesaEditar]);\r\n\r\n  return (\r\n    <Modal\r\n      show={mostrarModalEditar}\r\n      onHide={() => {\r\n        //Tengo que settear mi variable obJMEsaEditar a null\r\n        // setObjMesaEditar(null)\r\n        setMostrarModalEditar(false);\r\n      }}\r\n      size={\"xl\"}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Editar Mesa</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {objMesaEditar ? (\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Id:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={formulario.mesa_id}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Nro Mesa:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={formulario.mesa_nro}\r\n                name=\"mesa_nro\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Capacidad:</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={formulario.mesa_cap}\r\n                name=\"mesa_cap\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">Actualizar</button>\r\n            </div>\r\n          </form>\r\n        ) : null}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AdminModalEditarMesa;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { postMesa} from \"../../../services/mesaService\";\r\n\r\nconst AdminModalCrearMesa = ({mostrarModalCrear, setMostrarModalCrear, traerMesas}) => {\r\n  const [formulario, setFormulario] = useState(\r\n    {\r\n      mesa_nro: \"\",\r\n      mesa_cap: 0\r\n    }\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    postMesa(formulario).then((rpta) => {\r\n      if(rpta.data.ok){\r\n        setMostrarModalCrear(false);\r\n        setFormulario({\r\n          mesa_nro: \"\",\r\n          mesa_cap: 0\r\n        })\r\n        traerMesas();\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={mostrarModalCrear}\r\n      onHide={() => {\r\n        //Tengo que settear mi variable obJMEsaEditar a null\r\n        // setObjMesaEditar(null)\r\n        setMostrarModalCrear(false);\r\n      }}\r\n      size={\"xl\"}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Crear Mesa</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Nro Mesa:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={formulario.mesa_nro}\r\n              name=\"mesa_nro\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"\">Capacidad:</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              value={formulario.mesa_cap}\r\n              name=\"mesa_cap\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Crear\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AdminModalCrearMesa;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { deleteMesaById, getMesas } from \"../../../../services/mesaService\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport AdminModalEditarMesa from \"../../components/AdminModalEditarMesa\";\r\nimport AdminModalCrearMesa from \"../../components/AdminModalCrearMesa\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst AdminMesaScreen = () => {\r\n  const [mostrarModalEditar, setMostrarModalEditar] = useState(false);\r\n  const [mostrarModalCrear, setMostrarModalCrear] = useState(false);\r\n  const [cargando, setCargando] = useState(true);\r\n  const [mesas, setMesas] = useState({\r\n    columns: [\r\n      {\r\n        label: \"#\",\r\n        field: \"posicion\",\r\n      },\r\n      {\r\n        label: \"Id\",\r\n        field: \"mesa_id\",\r\n      },\r\n      {\r\n        label: \"Nro mesa\",\r\n        field: \"mesa_nro\",\r\n      },\r\n      {\r\n        label: \"Capacidad\",\r\n        field: \"mesa_cap\",\r\n      },\r\n      {\r\n        label: \"Acciones\",\r\n        field: \"acciones\",\r\n      },\r\n    ],\r\n    rows: [],\r\n  });\r\n\r\n  const [objMesaEditar, setObjMesaDitar] = useState(null);\r\n\r\n  const [mounted, setMounted] = useState(true);\r\n\r\n\r\n  const eliminarMesa = mesa_id => {\r\nSwal.fire({\r\n  title: '¿Seguro que deseas eliminar la mesa?',\r\n  text: 'Los cambios serán irreversibles',\r\n  showCancelButton: true,\r\n  icon: 'error'\r\n}).then((rpta) => {\r\n  if (rpta.isConfirmed){\r\n    deleteMesaById(mesa_id).then(rpta => {\r\n      if(rpta.data.ok){\r\n        Swal.fire({\r\n          text: \"Mesa eliminada correctamente\",\r\n          icon: \"success\",\r\n          timer: 1500\r\n        })\r\n      }\r\n    })\r\n    traerMesas();\r\n  }\r\n})\r\n  }\r\n\r\n  const traerMesas = () => {\r\n    setCargando(true);\r\n    getMesas().then((rpta) => {\r\n      if (rpta.data.ok) {\r\n        let mesasFormateadas = rpta.data.content.map((objMesa, i) => {\r\n          return {\r\n            ...objMesa,\r\n            mesa_cap: objMesa.mesa_cap + \" personas\",\r\n            posicion: i + 1,\r\n            acciones: (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  onClick={() => {\r\n                    setObjMesaDitar({ ...objMesa });\r\n                    setMostrarModalEditar(true);\r\n                  }}\r\n                >\r\n                  Editar\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => {\r\n                    eliminarMesa(objMesa.mesa_id)\r\n                  }}\r\n                >\r\n                  Eliminar\r\n                </button>\r\n              </>\r\n            ),\r\n          };\r\n        });\r\n\r\n\r\n\r\n        if (mounted){\r\n          setMesas({\r\n            ...mesas,\r\n            rows: mesasFormateadas,\r\n          });\r\n          setCargando(false);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    traerMesas();\r\n\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <main className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <div className=\"card shadow\">\r\n              <div className=\"card-body\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                    setMostrarModalCrear(true);\r\n                  }}\r\n                >\r\n                  Crear Mesa\r\n                </button>\r\n                <hr />\r\n                {cargando ? (\r\n                  <div className=\"alert alert-info\">Cargando</div>\r\n                ) : (\r\n                  <MDBDataTableV5 data={mesas} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n      <AdminModalEditarMesa\r\n        mostrarModalEditar={mostrarModalEditar}\r\n        setMostrarModalEditar={setMostrarModalEditar}\r\n        objMesaEditar={objMesaEditar}\r\n        traerMesas={traerMesas}\r\n      />\r\n\r\n      <AdminModalCrearMesa\r\n        mostrarModalCrear={mostrarModalCrear}\r\n        setMostrarModalCrear={setMostrarModalCrear}\r\n        traerMesas={traerMesas}\r\n      />\r\n\r\n      {/* \r\n\r\nEsto era una manera\r\n//Solo cuando tenga valor lo mando\r\n\r\n      objMesaEditar &&\r\n\r\n      <AdminModalEditarMesa \r\n      mostrarModalEditar={mostrarModalEditar}\r\n      setMostrarModalEditar={setMostrarModalEditar}\r\n      objMesaEditar={objMesaEditar}\r\n      setObjMesaDitar={setObjMesaDitar}/>\r\n*/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminMesaScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getPedidos } from \"../../../../services/pedidoService\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\n\r\nconst AdminPedidoScreen = () => {\r\n  const [pedidos, setPedidos] = useState([]);\r\n\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  const [datos, setDatos] = useState({\r\n    columns: [\r\n      { label: \"#\", field: \"posicion\" },\r\n      { label: \"Id\", field: \"pedido_id\" },\r\n      { label: \"Fecha\", field: \"pedido_fech\" },\r\n      { label: \"Codigo\", field: \"pedido_nro\" },\r\n      { label: \"Estado\", field: \"pedido_est\" },\r\n      { label: \"Nro Mesa\", field: \"mesa_nro\" },\r\n      { label: \"Usuario\", field: \"usu_nombre\" },\r\n      { label: \"Acciones\", field: \"acciones\" },\r\n    ],\r\n    rows: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    getPedidos()\r\n      .then((rpta) => {\r\n        if (rpta.data.ok) {\r\n          let filas = rpta.data.pedidos.map((objPedido, i) => {\r\n            return {\r\n              ...objPedido,\r\n              posicion: i + 1,\r\n              mesa_nro: objPedido.Mesa?.mesa_nro || \"S/N\",\r\n              usu_nombre:\r\n                objPedido.Usuario?.usu_nom + \" \" + objPedido.Usuario?.usu_ape || \"Sin Datos\",\r\n              acciones: <button>Ver detalles</button>,\r\n            };\r\n          });\r\n          setPedidos(rpta.data.pedidos);\r\n          setDatos({\r\n            ...datos,\r\n            rows: filas,\r\n          });\r\n\r\n          setCargando(false);\r\n        } else {\r\n          setCargando(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setCargando(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h1 className=\"display-4\">Lista de Pedidos</h1>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      {!cargando ? (\r\n        <MDBDataTableV5 data={datos} />\r\n      ) : (\r\n        <div className=\"alert alert-info\">\r\n          <h4>CARGANDO ...</h4>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AdminPedidoScreen;\r\n","import axios from \"axios\";\r\nimport { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const getPlatos = async () => {\r\n  const rpta = await axios.get(`${URL_BACKEND}/plato`);\r\n  return rpta;\r\n};\r\n\r\n\r\nexport const postPlato = async (objPlato) => {\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/plato`,\r\n    JSON.stringify(objPlato),\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      }\r\n    })\r\n    return rpta;\r\n};\r\n\r\nexport const postUploadImagenByPlatoId = async (file, plato_id) => {\r\n  \r\n  let miFormData = new FormData();\r\n  miFormData.append(\"imagen\", file);\r\n  miFormData.append(\"plato_id\", plato_id)\r\n\r\n  const rpta = await axios.post(\r\n    `${URL_BACKEND}/plato/imagen/upload`,\r\n    miFormData,\r\n    {\r\n      headers: {\r\n        \"Content-type\": \"multipart/form-data\"\r\n      }\r\n    }\r\n    );\r\n    return rpta;\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { getCategorias } from \"../../../../services/categoriaService\";\r\nimport {\r\n  postPlato,\r\n  postUploadImagenByPlatoId,\r\n} from \"../../../../services/platoService\";\r\n\r\nconst AdminPlatoCrearScreen = () => {\r\n  const [formulario, setFormulario] = useState({\r\n    plato_nom: \"\",\r\n    plato_img: \"\",\r\n    plato_pre: 0,\r\n    categoria_id: 0,\r\n  });\r\n\r\n  const [categorias, setCategorias] = useState([]);\r\n\r\n  const imagenRef = useRef();\r\n\r\n  useEffect(() => {\r\n    getCategorias().then((rpta) => {\r\n      if (rpta.data.ok) {\r\n        setCategorias(rpta.data.content);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({ ...formulario, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    postPlato(formulario).then(rpta => {\r\n      if (rpta.data.ok) {\r\n        postUploadImagenByPlatoId(\r\n          imagenRef.current.files[0],\r\n          rpta.data.content.plato_id\r\n        ).then(rpta2 => {\r\n          console.log(rpta2);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-header\">\r\n              <h4>Formulario de Creación de un Plato</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Nombre:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={formulario.plato_nom}\r\n                    name=\"plato_nom\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Precio:</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={formulario.plato_pre}\r\n                    name=\"plato_pre\"\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Categoria</label>\r\n                  <select\r\n                    name=\"\"\r\n                    className=\"form-control\"\r\n                    value={formulario.categoria_id}\r\n                    name=\"categoria_id\"\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option value=\"0\">Seleccione</option>\r\n                    {categorias.map((objCategoria, i) => {\r\n                      return (\r\n                        <option key={i} value={objCategoria.categoria_id}>\r\n                          {objCategoria.categoria_nom}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-groups\">\r\n                  <label htmlFor=\"\">Imagen</label>\r\n                  <input type=\"file\" className=\"form-control\" ref={imagenRef} accept=\"image/*\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Crear plato\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AdminPlatoCrearScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport { getPlatos } from \"../../../../services/platoService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//import {withRouter} from 'react-router-dom'\r\n\r\nconst platosInicial = {\r\n  columns: [\r\n    {\r\n      label: \"#\",\r\n      field: \"posicion\",\r\n    },\r\n    {\r\n      label: \"Id\",\r\n      field: \"plato_id\",\r\n    },\r\n    {\r\n      label: \"Nombre\",\r\n      field: \"plato_nom\",\r\n    },\r\n    {\r\n      label: \"Imagen\",\r\n      field: \"plato_img\",\r\n    },\r\n    {\r\n      label: \"Precio\",\r\n      field: \"plato_pre\",\r\n    },\r\n    {\r\n      label: \"Categoria\",\r\n      field: \"categoria_nom\",\r\n    },\r\n  ],\r\n  rows: [],\r\n};\r\n\r\nconst AdminPlatoScreen = (props) => {\r\n  const [cargando, setCargando] = useState(true);\r\n  const [platos, setPlatos] = useState(platosInicial);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    getPlatos().then((rpta) => {\r\n      if (rpta.data.ok) {\r\n        if (mounted) {\r\n          setPlatos({\r\n            ...platosInicial,\r\n            rows: rpta.data.content.map((objPlato, i) => {\r\n              return {\r\n                posicion: i + 1,\r\n                plato_id: objPlato.plato_id,\r\n                plato_nom: objPlato.plato_nom,\r\n                plato_img: <img src={objPlato.plato_img} width=\"100\" />,\r\n                plato_pre: `S/ ${(+objPlato.plato_pre).toFixed(2)}`,\r\n                categoria_nom:\r\n                  objPlato.Categorium?.categoria_nom || \"Sin Categoría\",\r\n              };\r\n            }),\r\n          });\r\n          setCargando(false);\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"container mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"card shadow\">\r\n            <div className=\"card-body\">\r\n              <Link className=\"btn btn-primary\" to=\"/admin/plato/crear\">\r\n                Crear Plato\r\n              </Link>\r\n              <hr />\r\n              {cargando ? (\r\n                <div className=\"alert alert-info\">Cargando</div>\r\n              ) : (\r\n                <MDBDataTableV5 data={platos} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AdminPlatoScreen;\r\n//export default withRouter(AdminPlatoScreen)\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AdminHeader from \"./components/AdminHeader\";\r\nimport AdminDashboardScreen from \"./pages/dashboard/AdminDashboardScreen\";\r\nimport AdminMesaScreen from \"./pages/mesa/AdminMesaScreen\";\r\nimport AdminPedidoScreen from \"./pages/pedido/AdminPedidoScreen\";\r\nimport AdminPlatoCrearScreen from \"./pages/plato/AdminPlatoCrearScreen\";\r\nimport AdminPlatoScreen from \"./pages/plato/AdminPlatoScreen\";\r\n\r\nconst AdminRouter = () => {\r\n  return (\r\n    <>\r\n      <AdminHeader />\r\n      <Switch>\r\n        <Route path=\"/admin/mesa\">\r\n          <AdminMesaScreen />\r\n        </Route>\r\n        <Route path=\"/admin/plato\" exact>\r\n          <AdminPlatoScreen />\r\n        </Route>\r\n        <Route path=\"/admin/plato/crear\" exact>\r\n          <AdminPlatoCrearScreen />\r\n        </Route>\r\n        <Route path=\"/admin/pedido\">\r\n          <AdminPedidoScreen />\r\n        </Route>\r\n        <Route path=\"/admin\" exact>\r\n          <AdminDashboardScreen />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminRouter;\r\n","import axios from 'axios';\r\nimport { URL_BACKEND } from '../environments/environments';\r\n\r\n\r\n//ruta logeo\r\nexport const postLogin = async (objLogin) => {\r\n    const rpta = await axios.post(`${URL_BACKEND}/login`,\r\n    JSON.stringify(objLogin),{\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    });\r\n    return rpta;\r\n};\r\n\r\n//null xq no mando nada al body\r\nexport const postVerificar = async (token) => {\r\n    const rpta = await axios.post(`${URL_BACKEND}/verificar`,\r\n    null,{\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    } );\r\n    return rpta;\r\n}\r\n\r\n/**\r\n * Peticion con fetch\r\n * const peticion = await fetch(`${URL_BACKEND}/verificar`,\r\n    {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`\r\n      }\r\n    });\r\n  const rpta = await peticion.json();\r\n  return rpta\r\n */","import React, { useContext, useState } from \"react\";\r\nimport AuthContext from \"../../../context/authContext\";\r\nimport { postLogin } from \"../../../services/authService\";\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nconst AuthLoginScreen = ({history}) => {\r\n  const [formulario, setFormulario] = useState({\r\n    correo: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n\r\n\r\n  const {iniciarSesionContext}= useContext(AuthContext);\r\n\r\n  const handleChange = (e) => {\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    postLogin(formulario).then((rpta) => {\r\n      if(rpta.data.ok){\r\n          iniciarSesionContext(rpta.data.token);\r\n          //Redireccionar acá al admin o punto de venta\r\n          let {token} = rpta.data;\r\n          let payloadString = token.split(\".\")[1];\r\n          let payloadDecoded = atob(payloadString);\r\n          let payloadJSON = JSON.parse(payloadDecoded);\r\n          if(payloadJSON.usu_tipo === \"admin\"){\r\n            history.push(\"/admin\")\r\n          } else {\r\n            history.push(\"/pos/terminal\")\r\n          }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"login\">\r\n      <div className=\"login__form\">\r\n        <h1>Inicio de Sesión</h1>\r\n        <form className=\"formulario\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"formulario__input\"\r\n            placeholder=\"Email\"\r\n            name=\"correo\"\r\n            onChange={handleChange}\r\n            value={formulario.correo}\r\n          />\r\n          <label htmlFor=\"\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"formulario__input\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            value={formulario.password}\r\n          />\r\n          <button className=\"formulario__submit\" type=\"submit\">\r\n            Iniciar Sesión\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default withRouter(AuthLoginScreen);\r\n","import React from 'react'\r\nimport {Switch, Route} from \"react-router-dom\"\r\nimport AuthLoginScreen from './pages/AuthLoginScreen'\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/auth/login\">\r\n                    <AuthLoginScreen/>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRouter\r\n","//Solo es una funcion\r\n\r\n//Recorda q el payload es la data q se envía ene l setState\r\n//Lo que se retorne en esta función será el nuevo estado\r\nexport const authReducer = (stateAntiguo, payload) => {\r\n  //console.log(stateAntiguo);\r\n\r\n  //El payload tiene el action y la data\r\n  if (payload.action === \"INICIAR_SESION\") {\r\n    return {\r\n      ...payload.data,\r\n    };\r\n  }\r\n\r\n  if (payload.action === \"CERRAR_SESION\") {\r\n    localStorage.removeItem(\"token\");\r\n    return {\r\n      autenticado: false,\r\n      cargando: false,\r\n      token: null,\r\n      usu_nom: null,\r\n      usu_id: null,\r\n      usu_tipo: null\r\n    };\r\n  }\r\n};\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { postVerificar } from \"../services/authService\";\r\n\r\nconst initialState = {\r\n  autenticado: false,\r\n  cargando: true,\r\n  token: null,\r\n  usu_nom: null,\r\n  usu_id: null,\r\n  usu_tipo: null\r\n};\r\n\r\nconst AuthState = (props) => {\r\n\r\n    console.log(props);\r\n\r\n  //authReducer viene a ser la función flecha\r\n  const [state, setState] = useReducer(authReducer, initialState);\r\n\r\n  const iniciarSesionContext = (token) => {\r\n    localStorage.setItem(\"token\", token);\r\n    let payloadString = token.split(\".\")[1];\r\n    let payloadStringDecript = atob(payloadString);\r\n\r\n    let payloadJson = JSON.parse(payloadStringDecript);\r\n\r\n    setState({\r\n      action: \"INICIAR_SESION\",\r\n      data: {\r\n        autenticado: true,\r\n        cargando: false,\r\n        token: token,\r\n        usu_nom: payloadJson.usu_nom,\r\n        usu_id: payloadJson.usu_id,\r\n        usu_tipo: payloadJson.usu_tipo\r\n      },\r\n    });\r\n\r\n    // if (payloadJson.usu_tipo === \"admin\") {\r\n    // props.history.push(\"admin/\");\r\n    // } else {\r\n    //  props.history.push(\"/pos/terminal\");\r\n    // }\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const iniciarSesionConLocalStorage = () => {\r\n      let token = localStorage.getItem(\"token\");\r\n      if(token){\r\n          postVerificar(token).then(rpta =>{\r\n              if(rpta.data.ok){\r\n                  iniciarSesionContext(token)\r\n              }\r\n          }).catch(error => {\r\n              console.log(error);\r\n              cerrarSesion();\r\n          })\r\n      } else {\r\n          cerrarSesion();\r\n      }\r\n  }\r\n\r\nuseEffect(() => {\r\n    iniciarSesionConLocalStorage();\r\n}, [])\r\n\r\n\r\n\r\n\r\n\r\n  const cerrarSesion = () => {\r\n    setState({\r\n      action: \"CERRAR_SESION\",\r\n    });\r\n    //props.history.replace(\"ruta\"): similar al push, pero no deja historial\r\n    //de las paginas visitadas anteriormente para no hacer un atrás\r\n    \r\n    //props.history.replace(\"/auth/login\")\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        iniciarSesionContext,\r\n        cerrarSesion,\r\n\r\n        //Compartiendo el state para usarlo en el private route\r\n        ...state\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default withRouter (AuthState);\r\n","import React, { useContext } from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport AuthContext from './context/authContext'\r\n\r\nconst PrivateRoute = (props) => {\r\n\r\nconsole.log(props.path);\r\n    const {autenticado, cargando, usu_tipo} = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        cargando ?\r\n          <div>\r\n            Cargando joven...\r\n          </div> :\r\n          autenticado ?\r\n            usu_tipo === \"admin\" && props.path.startsWith(\"/admin\") ||\r\n              usu_tipo === \"ventas\" && props.path.startsWith(\"/pos\") ?\r\n              <Route path={props.path} >\r\n                {props.children}\r\n              </Route> :\r\n              < Redirect to={\"/\"} />\r\n            :\r\n            <Redirect to={\"/\"} />\r\n      )\r\n}\r\n\r\nexport default PrivateRoute\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GuestHomeScreen = () => {\r\n  return (\r\n    <main className=\"container-fluid\">\r\n      <div\r\n        className=\"row bg-dark justify-content-center align-items-center\"\r\n        style={{\r\n          minHeight: \"100vh\"\r\n        }}\r\n      >\r\n        <div className=\"col-md-3\">\r\n          <Link to=\"/admin\">\r\n            <div className=\"card p-5 bg-warning text-white\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"display-4\">Admin</h4>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <Link to=\"/pos/terminal\">\r\n            <div className=\"card p-5 bg-info text-white\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"display-4\">Terminal POS</h4>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <Link to=\"/auth/login\">\r\n            <div className=\"card p-5 bg-danger text-white\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"display-4\">Login</h4>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default GuestHomeScreen;\r\n","import React from 'react'\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport GuestHomeScreen from './pages/GuestHomeScreen'\r\n\r\nconst GuestRouter = () => {\r\n    return (\r\n\r\n        <Switch>\r\n            <Route path=\"/\">\r\n                <GuestHomeScreen/>\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default GuestRouter\r\n","import React from \"react\";\nimport { Route, \n  Switch, \n  //BrowserRouter as Router\nHashRouter as Router } \n  from \"react-router-dom\";\nimport PosRouter from \"./modules/pos/PosRouter\";\nimport \"./styles/index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/invoice.css\";\nimport \"./styles/login.css\";\nimport AdminRouter from \"./modules/admin/AdminRouter\";\nimport AuthRouter from \"./modules/auth/AuthRouter\";\nimport AuthState from \"./context/authState\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport GuestRouter from \"./modules/guest/GuestRouter\";\n\nconst App = () => {\n  return (\n    <Router>\n      <AuthState>\n        <Switch>\n          <PrivateRoute path=\"/pos\">\n            <PosRouter />\n          </PrivateRoute>\n          <PrivateRoute path=\"/admin\">\n            <AdminRouter />\n          </PrivateRoute>\n\n          <Route path=\"/auth\">\n            <AuthRouter />\n          </Route>\n          <Route path=\"/\" exact>\n            <GuestRouter />\n          </Route>\n        </Switch>\n      </AuthState>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}